# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  hasReferences: Boolean
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  menus(relativePath: String): Menus!
  menusConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: MenusFilter): MenusConnection!
  config(relativePath: String): Config!
  configConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ConfigFilter): ConfigConnection!
  subscription(relativePath: String): Subscription!
  subscriptionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: SubscriptionFilter): SubscriptionConnection!
  home(relativePath: String): Home!
  homeConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: HomeFilter): HomeConnection!
  home2(relativePath: String): Home2!
  home2Connection(before: String, after: String, first: Float, last: Float, sort: String, filter: Home2Filter): Home2Connection!
  home3(relativePath: String): Home3!
  home3Connection(before: String, after: String, first: Float, last: Float, sort: String, filter: Home3Filter): Home3Connection!
  about(relativePath: String): About!
  aboutConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AboutFilter): AboutConnection!
  author_page(relativePath: String): Author_page!
  author_pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Author_pageFilter): Author_pageConnection!
  author(relativePath: String): Author!
  authorConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AuthorFilter): AuthorConnection!
  blog(relativePath: String): Blog!
  blogConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: BlogFilter): BlogConnection!
  portfolio(relativePath: String): Portfolio!
  portfolioConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PortfolioFilter): PortfolioConnection!
  categories(relativePath: String): Categories!
  categoriesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: CategoriesFilter): CategoriesConnection!
  tags(relativePath: String): Tags!
  tagsConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: TagsFilter): TagsConnection!
  archive(relativePath: String): Archive!
  archiveConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ArchiveFilter): ArchiveConnection!
  contact(relativePath: String): Contact!
  contactConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ContactFilter): ContactConnection!
  privacy(relativePath: String): Privacy!
  privacyConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PrivacyFilter): PrivacyConnection!
}

input DocumentFilter {
  menus: MenusFilter
  config: ConfigFilter
  subscription: SubscriptionFilter
  home: HomeFilter
  home2: Home2Filter
  home3: Home3Filter
  about: AboutFilter
  author_page: Author_pageFilter
  author: AuthorFilter
  blog: BlogFilter
  portfolio: PortfolioFilter
  categories: CategoriesFilter
  tags: TagsFilter
  archive: ArchiveFilter
  contact: ContactFilter
  privacy: PrivacyFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Menus | Config | Subscription | Home | Home2 | Home3 | About | Author_page | Author | Blog | Portfolio | Categories | Tags | Archive | Contact | Privacy | Folder

type MenusMainMenuSubmenu {
  name: String!
  link: String!
  target: String
  rel: String
}

type MenusMainMenu {
  name: String!
  link: String!
  target: String
  rel: String
  submenu: [MenusMainMenuSubmenu]
}

type MenusFooterMenu {
  name: String!
  link: String!
  target: String
  rel: String
}

type Menus implements Node & Document {
  mainMenu: [MenusMainMenu]
  footerMenu: [MenusFooterMenu]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input MenusMainMenuSubmenuFilter {
  name: StringFilter
  link: StringFilter
  target: StringFilter
  rel: StringFilter
}

input MenusMainMenuFilter {
  name: StringFilter
  link: StringFilter
  target: StringFilter
  rel: StringFilter
  submenu: MenusMainMenuSubmenuFilter
}

input MenusFooterMenuFilter {
  name: StringFilter
  link: StringFilter
  target: StringFilter
  rel: StringFilter
}

input MenusFilter {
  mainMenu: MenusMainMenuFilter
  footerMenu: MenusFooterMenuFilter
}

type MenusConnectionEdges {
  cursor: String!
  node: Menus
}

type MenusConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [MenusConnectionEdges]
}

type ConfigLogo {
  src: String
  src_light: String
  alt: String
  width: Float
  height: Float
}

type ConfigMetadata {
  title: String
  description: String
  author: String
  keywords: String
  image: String
}

type ConfigSettings {
  homepage_post_count: Float
  pagination: Float
  copyright: String
}

type Config implements Node & Document {
  baseURL: String
  favicon: String
  basePath: String
  trailingSlash: Boolean
  logo: ConfigLogo
  metadata: ConfigMetadata
  settings: ConfigSettings
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input ConfigLogoFilter {
  src: ImageFilter
  src_light: ImageFilter
  alt: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input ConfigMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  keywords: StringFilter
  image: StringFilter
}

input ConfigSettingsFilter {
  homepage_post_count: NumberFilter
  pagination: NumberFilter
  copyright: StringFilter
}

input ConfigFilter {
  baseURL: StringFilter
  favicon: StringFilter
  basePath: StringFilter
  trailingSlash: BooleanFilter
  logo: ConfigLogoFilter
  metadata: ConfigMetadataFilter
  settings: ConfigSettingsFilter
}

type ConfigConnectionEdges {
  cursor: String!
  node: Config
}

type ConfigConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ConfigConnectionEdges]
}

type Subscription implements Node & Document {
  title: String
  mailChimpFormAction: String
  mailChimpFormName: String
  formPlaceholder: String
  formButtonLabel: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input SubscriptionFilter {
  title: StringFilter
  mailChimpFormAction: StringFilter
  mailChimpFormName: StringFilter
  formPlaceholder: StringFilter
  formButtonLabel: StringFilter
}

type SubscriptionConnectionEdges {
  cursor: String!
  node: Subscription
}

type SubscriptionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [SubscriptionConnectionEdges]
}

type HomeMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type HomeRecent_posts {
  enable: Boolean
  title: String
  button_label: String
}

type Home implements Node & Document {
  title: String
  metadata: HomeMetadata
  recent_posts: HomeRecent_posts
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input HomeMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input HomeRecent_postsFilter {
  enable: BooleanFilter
  title: StringFilter
  button_label: StringFilter
}

input HomeFilter {
  title: StringFilter
  metadata: HomeMetadataFilter
  recent_posts: HomeRecent_postsFilter
}

type HomeConnectionEdges {
  cursor: String!
  node: Home
}

type HomeConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [HomeConnectionEdges]
}

type Home2Metadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type Home2Social_links {
  enable: Boolean
  twitter: String
  facebook: String
  linkedin: String
}

type Home2Recent_posts {
  enable: Boolean
  title: String
  button_label: String
}

type Home2 implements Node & Document {
  metadata: Home2Metadata
  image: String
  subtitle: String
  title: String
  description: String
  banner_button_label: String
  social_links: Home2Social_links
  recent_posts: Home2Recent_posts
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Home2MetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input Home2Social_linksFilter {
  enable: BooleanFilter
  twitter: StringFilter
  facebook: StringFilter
  linkedin: StringFilter
}

input Home2Recent_postsFilter {
  enable: BooleanFilter
  title: StringFilter
  button_label: StringFilter
}

input Home2Filter {
  metadata: Home2MetadataFilter
  image: ImageFilter
  subtitle: StringFilter
  title: StringFilter
  description: StringFilter
  banner_button_label: StringFilter
  social_links: Home2Social_linksFilter
  recent_posts: Home2Recent_postsFilter
}

type Home2ConnectionEdges {
  cursor: String!
  node: Home2
}

type Home2Connection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Home2ConnectionEdges]
}

type Home3Metadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type Home3Featured_posts {
  enable: Boolean
  title: String
}

type Home3Recent_posts {
  enable: Boolean
  title: String
  button_label: String
}

type Home3 implements Node & Document {
  metadata: Home3Metadata
  featured_posts: Home3Featured_posts
  recent_posts: Home3Recent_posts
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Home3MetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input Home3Featured_postsFilter {
  enable: BooleanFilter
  title: StringFilter
}

input Home3Recent_postsFilter {
  enable: BooleanFilter
  title: StringFilter
  button_label: StringFilter
}

input Home3Filter {
  metadata: Home3MetadataFilter
  featured_posts: Home3Featured_postsFilter
  recent_posts: Home3Recent_postsFilter
}

type Home3ConnectionEdges {
  cursor: String!
  node: Home3
}

type Home3Connection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Home3ConnectionEdges]
}

type AboutMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type AboutIntroImages {
  src: String
  width: Float
  height: Float
  grid_class: String
}

type AboutIntro {
  title: String
  images: [AboutIntroImages]
  description: String
}

type AboutOur_writers {
  enable: Boolean
  title: String
}

type About implements Node & Document {
  draft: Boolean
  title: String
  metadata: AboutMetadata
  intro: AboutIntro
  our_writers: AboutOur_writers
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AboutMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input AboutIntroImagesFilter {
  src: ImageFilter
  width: NumberFilter
  height: NumberFilter
  grid_class: StringFilter
}

input AboutIntroFilter {
  title: StringFilter
  images: AboutIntroImagesFilter
  description: StringFilter
}

input AboutOur_writersFilter {
  enable: BooleanFilter
  title: StringFilter
}

input AboutFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: AboutMetadataFilter
  intro: AboutIntroFilter
  our_writers: AboutOur_writersFilter
}

type AboutConnectionEdges {
  cursor: String!
  node: About
}

type AboutConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AboutConnectionEdges]
}

type Author_pageMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type Author_page implements Node & Document {
  draft: Boolean
  title: String
  metadata: Author_pageMetadata
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Author_pageMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input Author_pageFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: Author_pageMetadataFilter
}

type Author_pageConnectionEdges {
  cursor: String!
  node: Author_page
}

type Author_pageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Author_pageConnectionEdges]
}

type Author implements Node & Document {
  title: String!
  subtitle: String!
  image: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AuthorBodyAstroImageFilter {
  src: ImageFilter
  alt: StringFilter
  width: NumberFilter
  height: NumberFilter
  caption: StringFilter
  class: StringFilter
}

input AuthorBodyCalloutFilter {
  title: StringFilter
  theme: StringFilter
  icon: StringFilter
}

input AuthorBodyLinkPreviewFilter {
  id: StringFilter
}

input AuthorBodyYouTubeFilter {
  id: StringFilter
}

input AuthorBodyVimeoFilter {
  id: StringFilter
}

input AuthorBodyFilter {
  AstroImage: AuthorBodyAstroImageFilter
  Callout: AuthorBodyCalloutFilter
  LinkPreview: AuthorBodyLinkPreviewFilter
  YouTube: AuthorBodyYouTubeFilter
  Vimeo: AuthorBodyVimeoFilter
}

input AuthorFilter {
  title: StringFilter
  subtitle: StringFilter
  image: ImageFilter
  body: AuthorBodyFilter
}

type AuthorConnectionEdges {
  cursor: String!
  node: Author
}

type AuthorConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AuthorConnectionEdges]
}

type Blog implements Node & Document {
  draft: Boolean
  featured: Boolean
  date: String!
  title: String!
  description: String!
  author: String
  categories: [String!]!
  tags: [String!]!
  image: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input DatetimeFilter {
  after: String
  before: String
  eq: String
  exists: Boolean
  in: [String]
}

input BlogBodyAstroImageFilter {
  src: ImageFilter
  alt: StringFilter
  width: NumberFilter
  height: NumberFilter
  caption: StringFilter
  class: StringFilter
}

input BlogBodyCalloutFilter {
  title: StringFilter
  theme: StringFilter
  icon: StringFilter
}

input BlogBodyLinkPreviewFilter {
  id: StringFilter
}

input BlogBodyYouTubeFilter {
  id: StringFilter
}

input BlogBodyVimeoFilter {
  id: StringFilter
}

input BlogBodyFilter {
  AstroImage: BlogBodyAstroImageFilter
  Callout: BlogBodyCalloutFilter
  LinkPreview: BlogBodyLinkPreviewFilter
  YouTube: BlogBodyYouTubeFilter
  Vimeo: BlogBodyVimeoFilter
}

input BlogFilter {
  draft: BooleanFilter
  featured: BooleanFilter
  date: DatetimeFilter
  title: StringFilter
  description: StringFilter
  author: StringFilter
  categories: StringFilter
  tags: StringFilter
  image: ImageFilter
  body: BlogBodyFilter
}

type BlogConnectionEdges {
  cursor: String!
  node: Blog
}

type BlogConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [BlogConnectionEdges]
}

type Portfolio implements Node & Document {
  draft: Boolean
  featured: Boolean
  date: String!
  title: String!
  description: String!
  author: String
  categories: [String!]!
  tags: [String!]!
  image: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PortfolioBodyAstroImageFilter {
  src: ImageFilter
  alt: StringFilter
  width: NumberFilter
  height: NumberFilter
  caption: StringFilter
  class: StringFilter
}

input PortfolioBodyCalloutFilter {
  title: StringFilter
  theme: StringFilter
  icon: StringFilter
}

input PortfolioBodyLinkPreviewFilter {
  id: StringFilter
}

input PortfolioBodyYouTubeFilter {
  id: StringFilter
}

input PortfolioBodyVimeoFilter {
  id: StringFilter
}

input PortfolioBodyFilter {
  AstroImage: PortfolioBodyAstroImageFilter
  Callout: PortfolioBodyCalloutFilter
  LinkPreview: PortfolioBodyLinkPreviewFilter
  YouTube: PortfolioBodyYouTubeFilter
  Vimeo: PortfolioBodyVimeoFilter
}

input PortfolioFilter {
  draft: BooleanFilter
  featured: BooleanFilter
  date: DatetimeFilter
  title: StringFilter
  description: StringFilter
  author: StringFilter
  categories: StringFilter
  tags: StringFilter
  image: ImageFilter
  body: PortfolioBodyFilter
}

type PortfolioConnectionEdges {
  cursor: String!
  node: Portfolio
}

type PortfolioConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PortfolioConnectionEdges]
}

type CategoriesMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type CategoriesRecent_posts {
  enable: Boolean
  title: String
  visible_posts_count: Float
  button_label: String
}

type Categories implements Node & Document {
  draft: Boolean
  title: String
  metadata: CategoriesMetadata
  recent_posts: CategoriesRecent_posts
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input CategoriesMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input CategoriesRecent_postsFilter {
  enable: BooleanFilter
  title: StringFilter
  visible_posts_count: NumberFilter
  button_label: StringFilter
}

input CategoriesFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: CategoriesMetadataFilter
  recent_posts: CategoriesRecent_postsFilter
}

type CategoriesConnectionEdges {
  cursor: String!
  node: Categories
}

type CategoriesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [CategoriesConnectionEdges]
}

type TagsMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type TagsRecent_posts {
  enable: Boolean
  title: String
  visible_posts_count: Float
  button_label: String
}

type Tags implements Node & Document {
  draft: Boolean
  title: String
  metadata: TagsMetadata
  recent_posts: TagsRecent_posts
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input TagsMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input TagsRecent_postsFilter {
  enable: BooleanFilter
  title: StringFilter
  visible_posts_count: NumberFilter
  button_label: StringFilter
}

input TagsFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: TagsMetadataFilter
  recent_posts: TagsRecent_postsFilter
}

type TagsConnectionEdges {
  cursor: String!
  node: Tags
}

type TagsConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [TagsConnectionEdges]
}

type ArchiveMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type Archive implements Node & Document {
  draft: Boolean
  title: String
  metadata: ArchiveMetadata
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ArchiveMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input ArchiveFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: ArchiveMetadataFilter
}

type ArchiveConnectionEdges {
  cursor: String!
  node: Archive
}

type ArchiveConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ArchiveConnectionEdges]
}

type ContactMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type ContactContact_form {
  title: String
  description: String
  contact_info_title: String
  email_address: String
  phone_number: String
  contact_email: String
  form_button_text: String
}

type Contact implements Node & Document {
  draft: Boolean
  title: String
  metadata: ContactMetadata
  contact_form: ContactContact_form
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ContactMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input ContactContact_formFilter {
  title: StringFilter
  description: StringFilter
  contact_info_title: StringFilter
  email_address: StringFilter
  phone_number: StringFilter
  contact_email: StringFilter
  form_button_text: StringFilter
}

input ContactFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: ContactMetadataFilter
  contact_form: ContactContact_formFilter
}

type ContactConnectionEdges {
  cursor: String!
  node: Contact
}

type ContactConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ContactConnectionEdges]
}

type PrivacyMetadata {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

type Privacy implements Node & Document {
  draft: Boolean
  title: String
  metadata: PrivacyMetadata
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PrivacyMetadataFilter {
  title: StringFilter
  description: StringFilter
  author: StringFilter
  image: StringFilter
  keywords: StringFilter
  noindex: BooleanFilter
  canonical: StringFilter
}

input PrivacyBodyAstroImageFilter {
  src: ImageFilter
  alt: StringFilter
  width: NumberFilter
  height: NumberFilter
  caption: StringFilter
  class: StringFilter
}

input PrivacyBodyCalloutFilter {
  title: StringFilter
  theme: StringFilter
  icon: StringFilter
}

input PrivacyBodyLinkPreviewFilter {
  id: StringFilter
}

input PrivacyBodyYouTubeFilter {
  id: StringFilter
}

input PrivacyBodyVimeoFilter {
  id: StringFilter
}

input PrivacyBodyFilter {
  AstroImage: PrivacyBodyAstroImageFilter
  Callout: PrivacyBodyCalloutFilter
  LinkPreview: PrivacyBodyLinkPreviewFilter
  YouTube: PrivacyBodyYouTubeFilter
  Vimeo: PrivacyBodyVimeoFilter
}

input PrivacyFilter {
  draft: BooleanFilter
  title: StringFilter
  metadata: PrivacyMetadataFilter
  body: PrivacyBodyFilter
}

type PrivacyConnectionEdges {
  cursor: String!
  node: Privacy
}

type PrivacyConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PrivacyConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createFolder(collection: String, relativePath: String!): DocumentNode!
  updateMenus(relativePath: String!, params: MenusMutation!): Menus!
  createMenus(relativePath: String!, params: MenusMutation!): Menus!
  updateConfig(relativePath: String!, params: ConfigMutation!): Config!
  createConfig(relativePath: String!, params: ConfigMutation!): Config!
  updateSubscription(relativePath: String!, params: SubscriptionMutation!): Subscription!
  createSubscription(relativePath: String!, params: SubscriptionMutation!): Subscription!
  updateHome(relativePath: String!, params: HomeMutation!): Home!
  createHome(relativePath: String!, params: HomeMutation!): Home!
  updateHome2(relativePath: String!, params: Home2Mutation!): Home2!
  createHome2(relativePath: String!, params: Home2Mutation!): Home2!
  updateHome3(relativePath: String!, params: Home3Mutation!): Home3!
  createHome3(relativePath: String!, params: Home3Mutation!): Home3!
  updateAbout(relativePath: String!, params: AboutMutation!): About!
  createAbout(relativePath: String!, params: AboutMutation!): About!
  updateAuthor_page(relativePath: String!, params: Author_pageMutation!): Author_page!
  createAuthor_page(relativePath: String!, params: Author_pageMutation!): Author_page!
  updateAuthor(relativePath: String!, params: AuthorMutation!): Author!
  createAuthor(relativePath: String!, params: AuthorMutation!): Author!
  updateBlog(relativePath: String!, params: BlogMutation!): Blog!
  createBlog(relativePath: String!, params: BlogMutation!): Blog!
  updatePortfolio(relativePath: String!, params: PortfolioMutation!): Portfolio!
  createPortfolio(relativePath: String!, params: PortfolioMutation!): Portfolio!
  updateCategories(relativePath: String!, params: CategoriesMutation!): Categories!
  createCategories(relativePath: String!, params: CategoriesMutation!): Categories!
  updateTags(relativePath: String!, params: TagsMutation!): Tags!
  createTags(relativePath: String!, params: TagsMutation!): Tags!
  updateArchive(relativePath: String!, params: ArchiveMutation!): Archive!
  createArchive(relativePath: String!, params: ArchiveMutation!): Archive!
  updateContact(relativePath: String!, params: ContactMutation!): Contact!
  createContact(relativePath: String!, params: ContactMutation!): Contact!
  updatePrivacy(relativePath: String!, params: PrivacyMutation!): Privacy!
  createPrivacy(relativePath: String!, params: PrivacyMutation!): Privacy!
}

input DocumentUpdateMutation {
  menus: MenusMutation
  config: ConfigMutation
  subscription: SubscriptionMutation
  home: HomeMutation
  home2: Home2Mutation
  home3: Home3Mutation
  about: AboutMutation
  author_page: Author_pageMutation
  author: AuthorMutation
  blog: BlogMutation
  portfolio: PortfolioMutation
  categories: CategoriesMutation
  tags: TagsMutation
  archive: ArchiveMutation
  contact: ContactMutation
  privacy: PrivacyMutation
  relativePath: String
}

input DocumentMutation {
  menus: MenusMutation
  config: ConfigMutation
  subscription: SubscriptionMutation
  home: HomeMutation
  home2: Home2Mutation
  home3: Home3Mutation
  about: AboutMutation
  author_page: Author_pageMutation
  author: AuthorMutation
  blog: BlogMutation
  portfolio: PortfolioMutation
  categories: CategoriesMutation
  tags: TagsMutation
  archive: ArchiveMutation
  contact: ContactMutation
  privacy: PrivacyMutation
}

input MenusMainMenuSubmenuMutation {
  name: String
  link: String
  target: String
  rel: String
}

input MenusMainMenuMutation {
  name: String
  link: String
  target: String
  rel: String
  submenu: [MenusMainMenuSubmenuMutation]
}

input MenusFooterMenuMutation {
  name: String
  link: String
  target: String
  rel: String
}

input MenusMutation {
  mainMenu: [MenusMainMenuMutation]
  footerMenu: [MenusFooterMenuMutation]
}

input ConfigLogoMutation {
  src: String
  src_light: String
  alt: String
  width: Float
  height: Float
}

input ConfigMetadataMutation {
  title: String
  description: String
  author: String
  keywords: String
  image: String
}

input ConfigSettingsMutation {
  homepage_post_count: Float
  pagination: Float
  copyright: String
}

input ConfigMutation {
  baseURL: String
  favicon: String
  basePath: String
  trailingSlash: Boolean
  logo: ConfigLogoMutation
  metadata: ConfigMetadataMutation
  settings: ConfigSettingsMutation
}

input SubscriptionMutation {
  title: String
  mailChimpFormAction: String
  mailChimpFormName: String
  formPlaceholder: String
  formButtonLabel: String
}

input HomeMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input HomeRecent_postsMutation {
  enable: Boolean
  title: String
  button_label: String
}

input HomeMutation {
  title: String
  metadata: HomeMetadataMutation
  recent_posts: HomeRecent_postsMutation
}

input Home2MetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input Home2Social_linksMutation {
  enable: Boolean
  twitter: String
  facebook: String
  linkedin: String
}

input Home2Recent_postsMutation {
  enable: Boolean
  title: String
  button_label: String
}

input Home2Mutation {
  metadata: Home2MetadataMutation
  image: String
  subtitle: String
  title: String
  description: String
  banner_button_label: String
  social_links: Home2Social_linksMutation
  recent_posts: Home2Recent_postsMutation
}

input Home3MetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input Home3Featured_postsMutation {
  enable: Boolean
  title: String
}

input Home3Recent_postsMutation {
  enable: Boolean
  title: String
  button_label: String
}

input Home3Mutation {
  metadata: Home3MetadataMutation
  featured_posts: Home3Featured_postsMutation
  recent_posts: Home3Recent_postsMutation
}

input AboutMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input AboutIntroImagesMutation {
  src: String
  width: Float
  height: Float
  grid_class: String
}

input AboutIntroMutation {
  title: String
  images: [AboutIntroImagesMutation]
  description: String
}

input AboutOur_writersMutation {
  enable: Boolean
  title: String
}

input AboutMutation {
  draft: Boolean
  title: String
  metadata: AboutMetadataMutation
  intro: AboutIntroMutation
  our_writers: AboutOur_writersMutation
}

input Author_pageMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input Author_pageMutation {
  draft: Boolean
  title: String
  metadata: Author_pageMetadataMutation
}

input AuthorMutation {
  title: String
  subtitle: String
  image: String
  body: JSON
}

input BlogMutation {
  draft: Boolean
  featured: Boolean
  date: String
  title: String
  description: String
  author: String
  categories: [String]
  tags: [String]
  image: String
  body: JSON
}

input PortfolioMutation {
  draft: Boolean
  featured: Boolean
  date: String
  title: String
  description: String
  author: String
  categories: [String]
  tags: [String]
  image: String
  body: JSON
}

input CategoriesMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input CategoriesRecent_postsMutation {
  enable: Boolean
  title: String
  visible_posts_count: Float
  button_label: String
}

input CategoriesMutation {
  draft: Boolean
  title: String
  metadata: CategoriesMetadataMutation
  recent_posts: CategoriesRecent_postsMutation
}

input TagsMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input TagsRecent_postsMutation {
  enable: Boolean
  title: String
  visible_posts_count: Float
  button_label: String
}

input TagsMutation {
  draft: Boolean
  title: String
  metadata: TagsMetadataMutation
  recent_posts: TagsRecent_postsMutation
}

input ArchiveMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input ArchiveMutation {
  draft: Boolean
  title: String
  metadata: ArchiveMetadataMutation
}

input ContactMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input ContactContact_formMutation {
  title: String
  description: String
  contact_info_title: String
  email_address: String
  phone_number: String
  contact_email: String
  form_button_text: String
}

input ContactMutation {
  draft: Boolean
  title: String
  metadata: ContactMetadataMutation
  contact_form: ContactContact_formMutation
}

input PrivacyMetadataMutation {
  title: String
  description: String
  author: String
  image: String
  keywords: String
  noindex: Boolean
  canonical: String
}

input PrivacyMutation {
  draft: Boolean
  title: String
  metadata: PrivacyMetadataMutation
  body: JSON
}

schema {
  query: Query
  mutation: Mutation
}
